#!/bin/bash

## If CONFIG_FILE doesn't exist, copy over the template config file.
if [ ! -f "meshcentral-data/${CONFIG_FILE}" ]; then
    cp config.json.template meshcentral-data/"${CONFIG_FILE}"
fi

## Convert legacy environmental variables to config flags:
# MongoDB
if [ -n "$USE_MONGODB" ] && [ "$USE_MONGODB" == "true" ]; then
    if [ -z "$MONGO_URL" ]; then
        prefix=""
        if [ -n "$MONGO_INITDB_ROOT_USERNAME" ] && [ -n "$MONGO_INITDB_ROOT_PASSWORD" ]; then
            prefix="$MONGO_INITDB_ROOT_USERNAME:$MONGO_INITDB_ROOT_PASSWORD@"
        fi
        MONGO_URL="mongodb://${prefix}mongodb:27017"
    fi
    MC__settings__mongodb=$MONGO_URL
fi

if [ -n "$HOSTNAME" ]; then
    MC__settings__cert=$HOSTNAME
fi

if [ -n "$ALLOW_NEW_ACCOUNTS" ]; then
    MC__settings__NewAccounts=$ALLOW_NEW_ACCOUNTS
fi

if [ -n "$ALLOWPLUGINS" ]; then
    MC__settings__plugins__enabled=$ALLOWPLUGINS
fi

if [ -n "$LOCALSESSIONRECORDING" ]; then
    MC__domains___0X00___localSessionRecording=$LOCALSESSIONRECORDING
fi

if [ -n "$MINIFY" ]; then
    MC__domains___0X00___minify=$MINIFY
fi

if [ -n "$WEBRTC" ]; then
    MC__settings__WebRTC=$WEBRTC
fi

if [ -n "$IFRAME" ]; then
    MC__settings__AllowFraming=$IFRAME
fi

# Session Key
if [ -z "$SESSION_KEY" ] && [ -z "$MC__settings__sessionKey"]; then
    MC__settings__sessionKey="$(cat /dev/urandom | tr -dc 'A-Z0-9' | fold -w 48 | head -n 1)"
fi

# Reverse Proxy
if [ -n "$REVERSE_PROXY" ] && [ "$REVERSE_PROXY" != "false" ]; then
    MC__domains___0X00___certUrl="https://${REVERSE_PROXY}:${REVERSE_PROXY_TLS_PORT}"
fi

## Extract environment variables and add to $CONFIG_FILE
env -0 | while IFS='=' read -r -d '' name value; do
    printf "'%s'='%s'\n" "$name" "$value"
    # This expression requires bash.  I can probably do the matching using grep and therefore can drop the bash requirement
    if [[ "$name" =~ ^MC(__[a-zA-Z0-9]+|__[a-zA-Z0-9]*_0X[0-9]{2}_[a-zA-Z0-9]*)+$ ]]; then
        #Replace control characters
        #There may be a better way to do this, but I'm doing a two-step here:  
        #  replace _0Xaa_ with !0xaa! and then replace __ with ~
        #  split on ~ into an array
        #  lastly replace !0xaa! with the ASCII character
        $name=$(sed -e 's/_(0X[0-9]{2})_/!\1!/g' -e 's/__/~/g' <<< "$name")
        arr=(${name//~/ })
        echo ${arr[@]}
done



if [ -n $MC__domains___0X00___certUrl ]; then
    # If the config specifies a reverse proxy...
    node meshcentral/meshcentral --configfile "${CONFIG_FILE}" ${ARGS}
    exit
else
    # Otherwise, launch like normal...
    node meshcentral/meshcentral --configfile "${CONFIG_FILE}" --cert "$HOSTNAME" ${ARGS}
    exit
fi